{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","src","alt","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","console","log","fetch","then","response","json","robot","filteredRobots","filter","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAoBeA,EAhBF,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,KAAKC,EAAY,EAAZA,MAAMC,EAAM,EAANA,GAItB,OACI,sBAAKC,UAAU,kDAAf,UACI,qBAAKC,IAAG,+BAA0BF,GAAMG,IAAI,UAC5C,gCACI,6BAAKL,IACL,4BAAIC,WCILK,EAdE,SAAC,GAAY,IAAXC,EAAU,EAAVA,OACf,OACA,8BACKA,EAAOC,KAAI,SAACC,EAAKC,GACd,OAAO,cAAC,EAAD,CAEPR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCKFC,EAbG,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,aAEhB,OACI,qBAAKT,UAAU,MAAf,SACI,uBACAA,UAAU,mCACVU,KAAK,SAASC,YAAY,gBAC1BC,SAAUH,OCGPI,EAVA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAASC,OAAO,kBAAmBC,OAAO,SAAlE,SACKJ,EAAMK,YCoBJC,G,wDArBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHC,E,8DAODC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAS,M,+BAIxB,OAAGG,KAAKJ,MAAMC,SACH,yDAGJG,KAAKX,MAAMK,a,GAjBEQ,cC+DbC,E,kDArDX,aAAe,IAAD,8BACV,gBAqBJC,eAAiB,SAACC,GAEd,EAAKJ,SAAS,CAACK,YAAYD,EAAME,OAAOC,SAtBxC,EAAKZ,MAAQ,CACTjB,OAAO,GACP2B,YAAY,IAGhBG,QAAQC,IAAI,eAPF,E,gEAUO,IAAD,OAChBC,MAAM,8CACLC,MAAK,SAAAC,GACF,OAAOA,EAASC,UACjBF,MAAK,SAAAG,GACJ,EAAKd,SACG,CAAEtB,OAAOoC,OAGrBN,QAAQC,IAAI,uB,+BASP,IAAD,EACyBV,KAAKJ,MAA3BjB,EADH,EACGA,OAAO2B,EADV,EACUA,YACRU,EAAiBrC,EAAOsC,QAAO,SAAAF,GACjC,OAAOA,EAAM3C,KAAK8C,cAAcC,SAASb,EAAYY,kBAGzD,OAFAT,QAAQC,IAAI,UAER/B,EAAOyC,OAIH,sBAAK7C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUzB,OAAUqC,WAR7B,oBAAIzC,UAAU,KAAd,8B,GApCD2B,aCEHmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4b890790.chunk.js","sourcesContent":["// import React from 'react';\r\n\r\n\r\n\r\nconst Card = ({name,email,id})=>{\r\n\r\n    // const {name,email,id} = props;\r\n\r\n    return (\r\n        <div className=\"bg-light-green dib br3 p3 ma2 grow bw2 shadow-5\">\r\n            <img src={`https://robohash.org/${id}`} alt='Robot'/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Card;","\r\nimport Card from './Card'\r\n\r\nconst CardList = ({robots})=>{\r\n    return (\r\n    <div>\r\n        {robots.map((user,i)=>{\r\n            return <Card \r\n            key={i} \r\n            id={robots[i].id} \r\n            name={robots[i].name} \r\n            email={robots[i].email}/>\r\n            })}\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","const SearchBox = ({searchChange}) =>{\r\n\r\n    return (\r\n        <div className='pa2'>\r\n            <input \r\n            className='pa3 ba b--green bg-lightest-blue'\r\n            type=\"search\" placeholder=\"Search Robots\"\r\n            onChange={searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","const Scroll = (props)=>{\r\n    return (\r\n        <div style={{overflowY: 'scroll',border:\"1px solid black\", height:'700px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default Scroll;","import { Component } from 'react';\r\nclass ErrorBoundary extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info){\r\n        this.setState({hasError:true})\r\n    }\r\n\r\n    render(){\r\n        if(this.state.hasError){\r\n            return <h1>Ooops. That is not good</h1>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\n\r\nexport default ErrorBoundary;","import {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport './App.css';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\n\r\n\r\n\r\n\r\nclass App extends Component{\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            robots:[],\r\n            searchfield:''\r\n        }\r\n\r\n        console.log(\"constructer\")\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response=>{\r\n            return response.json();\r\n        }).then(robot=>{\r\n            this.setState(\r\n                    { robots:robot }\r\n                )\r\n        })\r\n        console.log(\"componentDidMount\")\r\n    }\r\n\r\n    onSearchChange = (event)=>{\r\n        // console.log(event.target.value);\r\n        this.setState({searchfield:event.target.value})\r\n        // console.log(robots[0].name)\r\n    }\r\n\r\n    render(){\r\n        const {robots,searchfield} = this.state;\r\n        const filteredRobots = robots.filter(robot=>{\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())})\r\n        console.log(\"render\")\r\n\r\n        if(!robots.length){\r\n            return <h1 className=\"tc\">Loading page</h1>\r\n        }else{\r\n            return (\r\n                <div className='tc'>\r\n                    <h1 className='f2'>RoboFriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <ErrorBoundary>\r\n                            <CardList robots = {filteredRobots} /> \r\n                        </ErrorBoundary>\r\n                    </Scroll>\r\n                </div>\r\n                );\r\n        }\r\n    }   \r\n}\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}